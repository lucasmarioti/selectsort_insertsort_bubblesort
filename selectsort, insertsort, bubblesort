
#include <stdio.h>
#include <stdlib.h>

void insertionsort(int v[200], int n)
{
    int i, j, x;
    for(i = 1; i < n; i++) {
        x = v[i];
        j = i - 1;
        while(j >= 0 && v[j] > x){
            v[j+1] = v[j];
            j--;
        }
        v[j+1] = x;
    }
    
}

int main()
{
    int v[200], n, i;
    printf("entre tamanho desejado do vetor: ");
    scanf("%d", &n);
    printf("entre os %d elementos do vetor: \n", n);
    for(i = 0; i < n; i++) {
        scanf("%d", &v[i]);
    }
    insertionsort(v, n);
    printf("\n\n vetor ordenado: \n");
    for(i = 0; i < n; i++){
    printf("%d\t", v[i]);
    }
    printf("\n");
    return 0;
}



#include <stdio.h>
#include <stdlib.h>

void selectionsort(int v[200], int n)
{
    int i, j, aux, min;
    for(i = 0; i < n-1; i++) {
        min = i;
        for(j = i+1; j < n; j++){
            if(v[j] < v[min]) {
                min = j;
            }
        
        }
        aux = v[i]; v[i] = v[min]; v[min] = aux; //troca
    }
    
}

int main()
{
    int v[200], n, i;
    printf("entre tamanho desejado do vetor: ");
    scanf("%d", &n);
    printf("entre os %d elementos do vetor: \n", n);
    for(i = 0; i < n; i++) {
        scanf("%d", &v[i]);
    }
    selectionsort(v, n);
    printf("\n\n vetor ordenado: \n");
    for(i = 0; i < n; i++){
        printf("%d\t", v[i]);
    }
    printf("\n");
    return 0;
}



#include <stdio.h>
#include <stdlib.h>

void bubblesort(int v[200], int n)
{
    int i, j, aux;
    for(i = n-i; i > 0; i--) {
        for(j = 0; j < i; j++){
            if(v[j] < v[j+1]) {
                aux = v[j]; v[j] = v[j+1]; v[j+1] = aux;
            }
        
        }
        
    }
    
}

int main()
{
    int v[200], n, i;
    printf("entre tamanho desejado do vetor: ");
    scanf("%d", &n);
    printf("entre os %d elementos do vetor: \n", n);
    for(i = 0; i < n; i++) {
        scanf("%d", &v[i]);
    }
    bubblesort(v, n);
    printf("\n\n vetor ordenado: \n");
    for(i = 0; i < n; i++){
        printf("%d\t", v[i]);
    }
    printf("\n");
    return 0;
}
  
